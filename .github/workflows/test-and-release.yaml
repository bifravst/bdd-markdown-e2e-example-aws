name: Test and Release

on: push

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  STACK_BASE_NAME: bddawsx-${{ github.sha }}
  NODE_NO_WARNINGS: 1

permissions:
  id-token: write
  contents: write
  issues: write
  actions: write

jobs:
  tests:
    runs-on: ubuntu-24.04

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: "22.x"
          cache: "npm"
      - name: Install dependencies
        run: npm ci --no-audit

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          # The role is set up via https://github.com/bifravst/ci
          # secrets.AWS_ACCOUNT_ID_CI is an organization secret
          role-to-assume: |
            arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID_CI }}:role/${{ github.repository_owner }}-ci-${{ github.event.repository.name }}
          # vars.AWS_REGION_CI is an organization variable
          aws-region: ${{ vars.AWS_REGION_CI }}

      - name: Set up test resources
        run: npx cdk deploy --require-approval never

      - name: Test
        run: |
          npx tsx features/run-features.ts > e2e-test-result.json
          cat e2e-test-result.json | npx tsx features/console-reporter.ts
          cat e2e-test-result.json | npx tsx features/markdown-reporter.ts >> $GITHUB_STEP_SUMMARY
          cat e2e-test-result.json | npx tsx features/traceToMermaid.ts >> $GITHUB_STEP_SUMMARY

      - name: Print failed End-to-End tests
        if: failure()
        run: cat e2e-test-result.json | npx tsx features/console-reporter.ts

      - uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: e2e-test-result
          path: e2e-test-result.json

      - name: Semantic release
        if: success()
        run: |
          npm i --no-save semantic-release@next
          npx semantic-release

      - name: Clean up End-to-End test resources
        if: always()
        run: npx cdk destroy -f
